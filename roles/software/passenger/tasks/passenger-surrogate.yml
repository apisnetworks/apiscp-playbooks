---
- name: Clone Passenger repository
  git:
    repo: "{{ passenger_repo }}"
    version: "{{ passenger_repo_ver }}"
    dest: "{{ passenger_home }}"
    update: "{{ passenger_update }}"
  register: repochkout
- name: Set system Ruby for Passenger
  copy:
    dest: "{{ passenger_home }}/.ruby-version"
    content: "{{ sys_ruby_version }}"
  # Use system Ruby
- name: Build Passenger
  shell: exec $SHELL -ic -- 'gem install -E --no-document rake ; rake -m -j "{{ ansible_processor_vcpus | int }}" apache2'
  args:
    chdir: "{{ passenger_home }}"
  notify: Restart apache
  when: repochkout.changed
# Necessary for Python support
- name: Include Python configuration
  include_vars:
    file: "{{ playbook_dir }}/roles/software/pyenv/defaults/main.yml"
    name: pyenv
- set_fact:
    passenger_python: "{{ pyenv.git_target }}/shims/python"
- name: Check if Python shims installed
  find: paths={{ passenger_python | dirname }} patterns="*"
  register: ch
- name: Install Python {{ passenger_default_python }}
  command: $SHELL -lc "{{ pyenv.git_target }}/bin/pyenv install {{ passenger_default_python }}"
  environment:
    TMPDIR: "{{ apnscp_root }}/storage/cache"
  when: ch.matched|int == 0
# End Python support

- name: Copy Passenger configuration
  template:
    src: templates/passenger.conf.j2
    dest: "{{ passenger_apache_config }}"
    force: yes
  notify: Restart apache
- name: Create Passenger directories
  file:
    path: "{{ passenger_home }}/{{ item }}"
    state: directory
  with_items:
    - logs
    - sockets
- file:
    path: "{{ passenger_fst_log_location | dirname}}"
    state: directory
- name: Link passenger log to {{ apnscp_shared_root }}
  file:
    path: "{{ passenger_fst_log_location }}"
    state: link
    src: "{{ passenger_log_location }}"
