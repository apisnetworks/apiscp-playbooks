- name: Initialize FILESYSTEMTEMPLATE
  file:
    path: "{{apnscp_filesystem_template}}"
    state: directory
  register: fst_created

- ini_file:
    path: "{{apnscp_root}}/config/custom/config.ini"
    section: core
    option: filesystem_template
    value: "{{ apnscp_filesystem_template }}"
- set_fact: __populate_filesystem_template=false
- set_fact: __populate_filesystem_template=true
  when: >
    populate_filesystem_template == "auto" and fst_created.changed or
    populate_filesystem_template and populate_filesystem_template != "auto"
- include_role: role="packages/install" tasks_from="configure-default-vars.yml"
- include_tasks: install-package.yml package="{{ item.package }}"  service="{{item.service}}"
  with_items: "{{ packages }}"
  when: __populate_filesystem_template

- name: "Build synchronizer RPM index"
  command: "{{ synchronizer }} generate"
  when: __populate_filesystem_template
# Ensure rsyslog log device is propagated
- command: /bin/true
  notify: Restart rsyslog
- meta: flush_handlers
- include_tasks: "{{ role_path }}/tasks/relocate-shared-directory.yml" 
  vars: 
    service: "{{ item.service }}"
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    logrotate_vars: "{{ item.logrotate_vars | default(None) }}"
    force: "{{ item.force | default(false) }}"
  with_items: "{{ relocated_paths }}"

- include_tasks: "{{ role_path }}/../bootstrap/tasks/set-platform-version.yml"
  vars:
    version: "{{apnscp_platform_version}}"
- name: "Setup /dev on {{ apnscp_filesystem_template }}"
  include_tasks: setup-dev.yml
- name: "Replace /bin/hostname"
  copy:
    content: |
      #!/bin/sh 
      cat /etc/HOSTNAME
    dest: "{{ apnscp_filesystem_template }}/siteinfo/bin/hostname"
    mode: 0755
# Call after initialization otherwise trigger to create basic directories fails

- name: Create mount point for {{ apnscp_shared_root }} on siteinfo
  file:
    path: "{{ apnscp_filesystem_template }}/siteinfo{{ apnscp_shared_root }}"
    state: directory
    mode: 0711
- file:
    path: "{{ apnscp_filesystem_template }}/siteinfo/home"
    state: directory
    mode: 0755

- name: Copy files only once
  include_tasks: oneshot-files.yml
  with_items: "{{ copy_files }}"
  loop_control:
    label: "Copy {{ item.file }} to {{ item.service | default('siteinfo') }}"

# This should be an alternative plugin to yum-synchronizer, but 
# we can't match wildcards on plugin names yet
- name: Copy PostgreSQL ldconfig
  file:
    src: "{{ item }}"
    dest: "{{ apnscp_filesystem_template }}/siteinfo/{{ item }}"
    state: hard
  with_items:
    - /etc/ld.so.conf.d/postgresql-pgdg-libs.conf
    - /etc/alternatives/pgsql-ld-conf
  notify: 
    - Rebuild ld cache
    - Reload filesystem template

# And for MySQL...
- name: Create mysql socket parent directory
  file:
    path: "{{ mysql_shared_path | dirname }}"
    state: directory
    owner: mysql
    group: mysql
    mode: 0711
- name: Reconfigure mysql to use "{{ apnscp_shared_root }}/mysql.sock"
  ini_file:
    path: /etc/my.cnf.d/apnscp.cnf
    section: "mysqld"
    option: socket
    value: "{{ mysql_shared_path }}"
    state: present
    no_extra_spaces: yes
  notify: Restart mariadb
- file:
    path: "{{ apnscp_filesystem_template }}/siteinfo/var/lib/mysql"
    state: directory
    owner: mysql
    group: mysql
    mode: 2751
- meta: flush_handlers
- wait_for:
    path: "{{ mysql_shared_path }}"
    state: present
    timeout: 60    
- file:
    path: "{{ apnscp_filesystem_template }}/siteinfo/var/lib/mysql/mysql.sock"
    src: "{{ mysql_shared_path }}"
    state: link
- name: Install mysql socket in system path
  file:
    path: /var/lib/mysql/mysql.sock
    src: "{{ mysql_shared_path }}"
    state: link 