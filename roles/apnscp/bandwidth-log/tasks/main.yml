- name: Create apnscp log profile
  template:
    src: templates/apnscp-bw.j2
    dest: "{{ logrotate_dir }}/apnscp-bw"
- name: Enable logrotate compression
  lineinfile:
    path: "{{logrotate_conf}}"
    regexp: '^\s*compress'
    state: present
    insertbefore: BOF
    line: compress
# Otherwise it can pulverize btmp
- name: Rotate logs daily
  lineinfile:
    path: "{{logrotate_conf}}"
    insertbefore: BOF
    state: present
    line: daily
- name: Disable other forms of rotation
  lineinfile:
    path: "{{ logrotate_conf }}"
    regexp: '^(?:monthly|weekly|yearly)\b'
    state: absent
# In a stock logrotate configuration, nested btmp/wtmp entries
# are prefixed with a tab. Match beginning of line to avoid
# changing these to rotate daily...
#
# @TODO may need to rotate weekly depending upon server volume
#       active servers can pollute wtmp/btmp and cause login delays
- name: Use numeric log ordering
  lineinfile:
    path: "{{logrotate_conf}}"
    regexp: '^\s*dateext'
    state: absent
- name: Edit logrotate profiles
  include_tasks: change-logrotate.yml
  with_items: "{{ maps }}"
  loop_control:
    label: "Editing {{ item }}"
- name: Add {{ apache_bw_log }} to {{ logrotate_dir }}/httpd
  lineinfile:
    path: "{{ logrotate_dir }}/httpd"
    regexp: '^([^{]+){'
    firstmatch: yes
    line: '\1 {{ apache_bw_log }} {{ "{" }}'
    backrefs: yes
    state: present
  when: apache_bw_log not in lookup('file', logrotate_dir + '/httpd')

- name: Rotate btmp weekly
  replace:
    path: "{{ logrotate_conf }}"
    # Python lacks atomic grouping :(
    regexp: '^([\w\W]*?/btmp (?:(?=(?P<atomic>[\w\W](?!weekly|daily|monthly)))(?P=atomic))+)}'
    replace: "\\1\n\tweekly\n}"
    backup: yes