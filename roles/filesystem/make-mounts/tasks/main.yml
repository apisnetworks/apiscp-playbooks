---
- shell: "grep -E '\\s+/\\s+xfs' /proc/mounts"
  register: xfs
  ignore_errors: true
  changed_when: false
- block:
  - shell: "grep -E '\\s+/\\s+ext4' /proc/mounts"
    register: ext4
    changed_when: false
  rescue:
    - fail: msg="No supported filesystem detected"
  when: xfs.rc != 0
- name: Save /etc/mtab if necessary
  stat: path=/etc/mtab
  register: mst
- name: Link /etc/mtab to /proc/mounts
  shell: >
    mv /etc/mtab{,.ansible-save} && ln -s /proc/mounts /etc/mtab  
  register: moved
  when: mst.stat.exists and mst.stat.islnk
- block:
    - include_tasks: enable-quotas.yml
  rescue:
    - shell: > 
        rm -f /etc/mtab && mv /etc/mtab{.ansible-save,} || ln -s /proc/mounts /etc/mtab
- meta: flush_handlers
- name: Restore /etc/mtab
  shell: >
    [[ -L /etc/mtab ]] && ( rm -f /etc/mtab && mv /etc/mtab{.ansible-save,} || ln -s /proc/mounts /etc/mtab) || true
  when: moved is defined and moved.changed
- file: 
    path: "{{ tmpfs_config | dirname }}"
    state: directory
- copy:
    content: "[Mount]\nOptions={{ tmpfs_attrs }}"
    dest: "{{ tmpfs_config }}"
- systemd: service=tmp.mount masked=no state=started enabled=yes
  notify:
    - Restart services
# cf. https://chrisdown.name/2018/01/02/in-defence-of-swap.html
- name: Check for presence of swap
  command: "swapon -s"
  register: r
  changed_when: false
- include_role: name=filesystem/swap
  vars:
    swapfile_size: "{{ [ansible_memtotal_mb * 0.5, 1024 ]  | min | int }}"
    swapfile_swappiness: 50
    swapfile_location: /swap
    swapfile_use_dd: True
  when: r.stdout == ""

- name: "Disable binfmt mount"
  systemd: name="{{ item }}" masked=yes state=stopped
  with_items:
    - proc-sys-fs-binfmt_misc.automount
    - systemd-binfmt.service 

- name: Mount procfs with hidepid=2
  mount:
    fstype: proc
    opts: defaults,hidepid=2
    state: mounted
    path: /proc
    src: proc

