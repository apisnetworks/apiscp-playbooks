---  
- name: Override systemd defaults
  include_tasks: set-systemd-defaults.yml

- systemd: name=mariadb state=started enabled=yes
- set_fact:
    password: "{{ lookup('password', '/dev/null chars=ascii_letters length=15') }}"

- name: Check for password presence
  stat: path={{ mysql_pass_file }}
  register: s
- name: Enable root MySQL user
  mysql_user: 
    name: root 
    password: "{{password}}" 
    host: localhost 
    priv: "*.*:ALL,GRANT" 
    update_password: always 
    state: present 
    check_implicit_admin: yes 
    encrypted: no
  register: user_enabled
  when: not s.stat.exists
- name: Save MySQL password
  template: 
    src: templates/my.cnf.j2
    dest: "{{ mysql_pass_file }}"
    mode: 0600
  when: user_enabled is defined and user_enabled.changed
- mysql_user: 
    name: root 
    host: localhost 
    check_implicit_admin: yes
    # ALL excludes GRANT. GRANT itself yields syntax error
    priv: "*.*:ALL,GRANT"
    append_privs: yes
    state: present
- name: Find password column in mysql.user
  shell: > 
    echo "SELECT column_name FROM INFORMATION_SCHEMA.columns WHERE 
      table_schema = 'mysql' AND table_name = 'user' AND column_name 
      IN('authentication_string','password') ORDER by column_name ASC LIMIT 1;" |
      mysql --column-names=false
  register: o
  changed_when: false
- fail: msg="Unable to determine password column name in mysql.user"
  when: o.stdout == ''
- set_fact:
    mysql_password_column: "{{ o.stdout }}"
- name: Remove passwordless users
  shell: >
    echo "DELETE FROM user WHERE {{ mysql_password_column }} = ''; 
      SELECT ROW_COUNT(); FLUSH PRIVILEGES;" | mysql mysql --column-names=false
  register: o
  changed_when: (o | int) > 0
- name: Remove test database if present
  mysql_db:
    name: test
    state: absent
  when: user_enabled is defined and user_enabled.changed
  register: test
- name: Remove empty user grants
  mysql_user:
    name: ""
    host: "%"
    state: absent
  when: test is defined and test.changed or 
    user_enabled is defined and user_enabled.changed
- name: Reconfigure mysql
  ini_file:
    path: /etc/my.cnf.d/apnscp.cnf
    section: mysqld
    option: "{{ item.key }}"
    value: "{{ item.value }}"
  with_dict: "{{ configuration }}"
  loop_control:
    label: "Setting {{ item.key }} => {{ item.value }}"
  notify: Restart mariadb