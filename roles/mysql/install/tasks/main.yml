---
- name: Override systemd defaults
  include_tasks: set-systemd-defaults.yml

- systemd: name=mariadb state=started enabled=yes
- set_fact:
    password: "{{ lookup('password', '/dev/null chars=ascii_letters length=25') }}"
  # service command won't forward to systemd if alias,
  # "service mysql restart" with notify leaves service in failed state
- name: Remove /etc/init.d/mysql SysV service
  file:
    path: /etc/init.d/mysql
    state: absent
- name: Check for password presence
  stat: path={{ mysql_pass_file }}
  register: s
- name: Enable root MySQL user
  mysql_user:
    name: root
    password: "{{password}}"
    host: localhost
    priv: "*.*:ALL,GRANT"
    update_password: always
    state: present
    check_implicit_admin: yes
    encrypted: no
  register: user_enabled
  when: not s.stat.exists
- name: Save MySQL password
  template:
    src: templates/my.cnf.j2
    dest: "{{ mysql_pass_file }}"
    mode: 0600
  when: user_enabled is defined and user_enabled.changed
- mysql_user:
    name: root
    host: localhost
    check_implicit_admin: yes
    # ALL excludes GRANT. GRANT itself yields syntax error
    priv: "*.*:ALL,GRANT"
    append_privs: yes
    state: present
- name: Find password column in mysql.user
  shell: >
    echo "SELECT column_name FROM INFORMATION_SCHEMA.columns WHERE
      table_schema = 'mysql' AND table_name = 'user' AND column_name =
      'authentication_string'" | mysql --column-names=false
  environment:
    HOME: /root
  register: o
  changed_when: false
- set_fact: mysql_delete_clause="password = ''"
  when: o.stdout == ''
- set_fact: mysql_delete_clause="password = '' AND authentication_string = ''"
  when: o.stdout != ''
- name: Remove passwordless users
  shell: >
    echo "DELETE FROM user WHERE {{ mysql_delete_clause }};
      SELECT ROW_COUNT(); FLUSH PRIVILEGES;" | mysql mysql --column-names=false
  register: o
  changed_when: (o.stdout | int) > 0
  when: user_enabled is defined and user_enabled.changed
- name: Remove test database if present
  mysql_db:
    name: test
    state: absent
  when: user_enabled is defined and user_enabled.changed
  register: test
- name: Remove empty user grants
  mysql_user:
    name: ""
    host: "%"
    state: absent
  when: test is defined and test.changed or
    user_enabled is defined and user_enabled.changed
- name: Remove test db grants
  shell: >
    echo "DELETE FROM db WHERE db IN('test', 'test\_%') AND host = '%';
      SELECT ROW_COUNT(); FLUSH PRIVILEGES;" | mysql mysql --column-names=false
  register: o
  changed_when: (o.stdout | int) > 0
  when: test is defined and test.changed or
    user_enabled is defined and user_enabled.changed
- name: Reconfigure mysql
  ini_file:
    path: /etc/my.cnf.d/apnscp.cnf
    section: mysqld
    option: "{{ item.key }}"
    value: "{{ item.value }}"
  with_dict: "{{ configuration }}"
  loop_control:
    label: "Setting {{ item.key }} => {{ item.value }}"
  notify: Restart mariadb
