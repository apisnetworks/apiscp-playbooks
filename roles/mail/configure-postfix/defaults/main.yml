---
mail_configure_postfix_marker: true
# Configure in data_center_mode to enable a centralized memcache server
# Server :qformatted as ip.addr:port, [ip6::addr]:port, or /path/to/unix/domain.sock
postfix_memcache_server:

aliases_file: /etc/aliases
postfix_conf_dir: /etc/postfix
# apnscp-specific lookup file for database configuration
postfix_control_file: "{{ postfix_conf_dir }}/mailboxes.cf"
# Allow unauthenticated relaying from 127.0.0.1
# See also StealCat malware
postfix_relay_mynetworks: false

postfix_sysuser: postfix
postfix_sysgroup: postfix
postfix_user: postfix
# Override to force a password otherwise randomly assigned
postfix_password:
# Don't touch.
postfix_db: "{{ appliance_db }}"
template_files:
  - mailboxes.cf.j2
  - uids.cf.j2
  - virtual_filter.cf.j2
  - aliases.cf.j2
  - postscreen_access.cidr.j2
  - client_access.j2
  - domains.cf.j2

postfix_inet_interfaces: "{{ mail_enabled | bool | ternary('all','loopback-only') }}"
postfix_mydomain: "{{ data_center_mode | bool | ternary(ansible_nodename, None) }}"
# Same recipient delivery delay. With SpamAssassin, set to a number > 0 to prevent monopolization
# of an inundated mailbox since SA has a very limited number of slots to scan mail.
postfix_local_delivery_delay: "{{ (spamfilter == 'spamassassin') | ternary('3s', '0') }}"
# PostSRS
postsrs_sender_map_port: 10001
postsrs_recipient_map_port: 10002

# Address verification/postscreen map cache
# When data_center_mode is true, replace the maps
# with an aggregate memcache instance
postfix_local_address_verify_map: "proxy:btree:$data_directory/verify_cache"
postfix_local_postscreen_cache_map: "proxy:btree:$data_directory/postscreen_cache"

postfix_address_verify_map: "{{ (postfix_memcache_server | default('', true) | length > 0) | ternary('memcache:' + postfix_conf_dir + '/memcache-address_verify.cf', postfix_local_address_verify_map) }}"
postfix_postscreen_cache_map: "{{ (postfix_memcache_server | default('', true) | length  > 0) | ternary('memcache:' + postfix_conf_dir + '/memcache-postscreen_cache.cf', postfix_local_postscreen_cache_map) }}"

# Assign 1 server responsibility of periodically purging Postscreen results
postfix_postscreen_cache_cleanup_interval: "{{ (-1 == postfix_postscreen_cache_map.find('memcache:')) | ternary(86400, 0) }}"

postfix_memcache_maps:
  - config: "memcache-address_verify.cf"
    params:
      - memcache: "{{ (postfix_memcache_server[0] == '/') | ternary('unix', 'inet')}}:{{ postfix_memcache_server }}"
      - backup: "{{ postfix_local_address_verify_map }}"
      - key_format: "vrfy:%s"
  - config: "memcache-postscreen_cache.cf"
    params:
      - memcache: "{{ (postfix_memcache_server[0] == '/') | ternary('unix', 'inet')}}:{{ postfix_memcache_server }}"
      - backup: "{{ postfix_local_postscreen_cache_map }}"
      - key_format: "ps:%s"
