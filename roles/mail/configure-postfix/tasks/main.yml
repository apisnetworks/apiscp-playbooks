---
- fail:
    msg: >-
      IMPORTANT: Data center mode enabled but address verify map or
      postscreen map not shared in memcache instance! Set postfix_address_verify_map
      and postfix_postscreen_cache_map for best performance.
  ignore_errors: true
  when: >
    data_center_mode and (
      -1 == postfix_address_verify_map.find("memcache:") or
      -1 == postfix_postscreen_cache_map.find("memcache:")
    )

- include_vars: "{{playbook_dir}}/roles/mail/maildir/defaults/main.yml"
- include_tasks: register-password.yml
- include_tasks: install-postsrs.yml
  when: postsrsd_enabled
- name: Remove postsrsd
  yum: name=postsrsd state=absent
  when: not postsrsd_enabled

- name: Create Postfix user
  postgresql_user:
    name: "{{ postfix_user }}"
    password: "{{ postfix_password }}"
    db: "{{ postfix_db }}"
    encrypted: YES
    priv: "uids:select/gids:select/domain_lookup:select/email_lookup:select"
  become: yes
  become_user: postgres
  register: user

- name: Copy Postfix configuration templates
  template:
    src: "templates/{{ item }}"
    dest: "{{ postfix_conf_dir }}/{{ item | regex_replace('\\.j2$', '') }}"
    owner: root
    group: "{{ postfix_sysuser }}"
    mode: 0640
  with_items: "{{ template_files }}"
  notify: Restart postfix
- include_tasks: set-configuration.yml
  with_dict: "{{ config }}"
  vars:
    notify: Restart postfix
  loop_control:
    label: "Set {{ item.key }} => {{ item.value }}"

- name: Create aliases
  include_tasks: manage-alias.yml
  vars:
    email: "{{ item.key }}"
    destination: "{{ item.value }}"
  with_dict:
    site_blackhole: >
      {{ (spamfilter == 'rspamd') | ternary('rspamc learn_spam', '/dev/null') }}
    "{{ apnscp_system_user }}": root
  loop_control:
    label: "Adding alias {{ item.key }} to {{ item.value }}"

- name: Check if sender transport creation necessary
  stat: path="{{ postfix_conf_dir}}/sender_transport"
  register: st
- name: Create sender transport
  block:
  - file:
      path: "{{ postfix_conf_dir}}/sender_transport"
      state: touch
  - command: /usr/sbin/postmap "{{ postfix_conf_dir }}/sender_transport"
  when: not st.stat.exists
- name: Update transport
  command: /usr/sbin/postmap "{{ postfix_conf_dir }}/transport"
  changed_when: false

- name: Set postscreen/address verify caches
  include_tasks: set-configuration.yml
  vars:
    config_file: "{{ postfix_conf_dir }}/{{ subitem.0.config }}"
    item: "{{ lookup('dict', subitem.1) }}"
    notify: Restart postfix
  when: (postfix_memcache_server | default('', true) | length > 0)
  loop_control:
    label: "Setting {{ lookup('dict', subitem.1).key }} in {{ subitem.0.config }}"
    loop_var: subitem
  with_subelements:
    - "{{ postfix_memcache_maps }}"
    - params

- meta: flush_handlers
