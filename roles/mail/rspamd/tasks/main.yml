---
- include_tasks: enable-rspamd.yml
  when: rspamd_enabled
- block:
    - name: Disable rspamd
      systemd: name=rspamd state=disabled enabled=false
      failed_when: false
  when: not rspamd_enabled

# General spam filtering
# @TODO move to separate role?

- name: Remove spamassassin rules configuration
  file: path="{{ rspamd_local_config_dir }}/spamassassin.conf" state=absent
  notify: Restart rspamd
  when: not rspamd_use_spamassassin_rules

- name: "{{ (spamfilter == 'spamassassin') | ternary('Enable', 'Disable') }} spamc usage"
  replace:
    path: "{{ item }}"
    regexp: '^(\s*){{ (spamfilter == "spamassassin") | ternary("#\s*", "") }}(xfilter\s+.*?(?<=[\/\s])spamc\s+.*)$'
    replace: '\1{{ (spamfilter == "spamassassin") | ternary("", "#") }}\2'
  with_items: "{{ maildrop_files }}"
- name: Always add X-Spam-Score header
  replace:
    path: /etc/mail/spamassassin/local.cf
    regexp: '^\s*add_header\s+(?!all\S+)\s+[sS]core\s+.*$'
    replace: 'add_header all Score _SCORE_'
  notify: Restart spamassassin
  when: spamfilter == "spamassassin"

- name: '{{ rspamd_enabled | ternary("Add", "Remove") }} learning aliases'
  include_role:
    name: mail/configure-postfix
    tasks_from: manage-alias.yml
  vars:
    email: "{{ item.key }}"
    destination: "{{ rspamd_enabled | ternary(item.value, None) }}"
  with_dict:
    "{{ rspamd_learn_ham_email }}": "{{ rspamd_learn_ham }}"
    "{{ rspamd_learn_spam_email }}": "{{ rspamd_learn_spam }}"

- name: '{{ rspamd_enabled | ternary("Add", "Remove") }} milter configuration for Postfix'
  include_role: name=mail/configure-postfix tasks_from=set-configuration.yml
  vars:
    notify:
      - Restart rspamd
      - Restart postfix
  with_dict: "{{ postfix_config }}"

- name: "{{ rspamd_passive_learning_mode | ternary('Set', 'Remove' ) }} piggyback SpamAssassin results"
  blockinfile:
    path: "{{ item }}"
    marker: "# {mark} MANAGED BLOCK - DO NOT TOUCH"
    block: "{{ rspamd_piggyback_block }}"
    insertafter: '^DELETE_THRESHOLD=[\d\.]+$'
    state: "{{ rspamd_passive_learning_mode | ternary('present', 'absent') }}"
  with_items: "{{ maildrop_files }}"
